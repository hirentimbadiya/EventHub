import Link from 'next/link';
import Head from 'next/head';

const EventsCatPage = ({ data, pageName }) => {
    return (
        <>
            <Head>
                <title>Events of {pageName}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className='flex flex-col  items-center justify-center'>
                <h1 className='text-[32px] font-bold text-gradient pt-5'>Events in {pageName}</h1>
                {data.map((cat) => (
                    <div className='flex flex-col justify-center items-center'>
                        <h2 className='text-[32px] msm:text-[26px] mt-5 mb-3 font-ubuntu tracking-wide evt-grd'>{cat.title}</h2>
                        <Link key={cat.id} href={`/events/${cat.city.charAt(0).toLowerCase() + cat.city.slice(1)}/${cat.id}`} legacyBehavior>
                            <a className='flex flex-col image mmd:items-center mmd:justify-center'>
                                <img src={cat.image} alt={cat.title} width={200} height={200} className=" rounded-2xl event_img" />
                            </a>
                        </Link>
                    </div>
                )
                )}
            </div >
        </>
    );
}

export default EventsCatPage;


export const getStaticPaths = async () => {
    const { events_categories } = await import("/data/data.json");
    const allPaths = events_categories.map((ct) => {
        return {
            params: {
                cat: ct.id.toString(),
            }
        }
    })

    return {
        paths: allPaths,
        fallback: false
    };
}

export const getStaticProps = async (context) => {
    const id = context.params.cat;
    const { allEvents } = await import("/data/data.json");
    const data = allEvents.filter(cat => cat.city === id.charAt(0).toUpperCase() + id.slice(1));
    return {
        props: {
            data,
            pageName: id.charAt(0).toUpperCase() + id.slice(1)
        }
    };
}
